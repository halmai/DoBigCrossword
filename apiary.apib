FORMAT: 1A
HOST: http://api.dobigcrossword.com/

# DoBigCrossword

This API is able to handle the functionality of a multiuser crossword creator site

## Authentication [/registraion/]

### Register a user [POST]

Use this function if you want to create a new user. Returns
- 200 if the registration was successful 
- 403 if the email address is already in use
- 403 if the password is wrong (too short, too long, too simple, etc.)

+ Request (application/json)

        {
            "email": "johndoe@gmail.com",
            "password": "abc123",
        }


+ Response 200 (application/json)

        {
            "result": "OK",
        }


+ Response 403 (application/json)

        {
            "result": "ERROR",
            "message": "Email address already in use."
        }

+ Response 403 (application/json)

        {
            "result": "ERROR",
            "message": "The password doesn't meet the requirements."
        }

### Check if email address exists [GET]

With this function the client can check whether a given email address is already in use or not. It returns
- 200 if the email address is a valid email address, in this case the is_existing field contains the booleanvalue whether the email address is already used or not
- 400 if the email address is invalid


+ Request (application/json)

        {
            "email": "johndoe@gmail.com",
        }

+ Response 200 (application/json)

        {
            "result": "OK",
            "is_existing": false
        }

+ Response 400 (application/json)

        {
            "result": "ERROR",
            "message": "The email address in invalid."
        }
        
### Log in a user [POST]

Use this function to log in a user.
- 200 if the registration was successful. In this case a token is returned which has to be used for the further communication and identification of the user. 
- 403 if the email address and/or the password are wrong

+ Request (application/json)

        {
            "email": "johndoe@gmail.com",
            "password": "abc123",
        }


+ Response 200 (application/json)

        {
            "result": "OK",
            "token": "a546b362c73d84f95f003c66ab3ed0c9"
        }


+ Response 403 (application/json)

        {
            "result": "ERROR",
            "message": "Email address or password is wrong."
        }

### Password reminder [POST]

Use this function to request a password reminder email.
- 200 if the email address exists. It returns the normalised form of the email address where the password reminder email has been sent to.
- 403 if the email address doesn't exist

+ Request (application/json)

        {
            "email": " John.Doe@gmail.com  ",
        }


+ Response 200 (application/json)

        {
            "result": "OK",
            "email": "johndoe@gmail.com"
        }


+ Response 403 (application/json)

        {
            "result": "ERROR",
            "message": "Unknown email address."
        }

### Logout [POST]

Use this function to invalidate the user's token.
- 200 if the invalidation was successful (the user was logged in and is not logged in anymore).
- 403 if the user was not logged in

+ Request (application/json)

        {
            "token": "a546b362c73d84f95f003c66ab3ed0c9"
        }


+ Response 200 (application/json)

        {
            "result": "OK",
        }


+ Response 403 (application/json)

        {
            "result": "ERROR",
            "message": "There was no logged in user with this token."
        }